{"version":3,"sources":["components/tippo.jsx","components/tips.jsx","components/topbar.jsx","App.js","reportWebVitals.js","index.js"],"names":["tippo","props","Text","boxText","className","tips","topbar","text","App","useMoralis","authenticate","isAuthenticated","user","tileSideLengths","tileGap","tileBorderRadii","maxHorizontal","tileTextStyles","fontFamily","fontSize","fill","tiles","styles","normal","hover","active","textStyle","shadow","onClick","alert","get","href","console","log","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","appId","serverUrl","document","getElementById"],"mappings":"oOAgBeA,EAdD,SAACC,GACb,IAAMC,EAAOD,EAAME,QACfF,EAAME,QACN,uFAEJ,OACE,sBAAKC,UAAU,QAAf,UACE,qBAAKA,UAAU,WACf,qBAAKA,UAAU,WAAf,SAA2BF,IAC3B,qBAAKE,UAAU,eCQNC,EAhBF,WACX,OACE,sBAAKD,UAAU,SAAf,UACE,qBAAKA,UAAU,QAAf,mGAIA,qBAAKA,UAAU,WACf,qBAAKA,UAAU,WACf,qBAAKA,UAAU,WACf,qBAAKA,UAAU,WACf,cAAC,EAAD,CAAOD,QAAQ,yECHNG,EARA,WACb,OACE,qBAAKF,UAAU,SAAf,SACE,cAAC,EAAD,CAAMG,KAAK,wE,QCiEFC,MA/Df,WAAgB,IAAD,EACmCC,cAAxCC,EADK,EACLA,aAAcC,EADT,EACSA,gBAAiBC,EAD1B,EAC0BA,KAEvC,OAAKD,EAQH,sBAAKP,UAAU,MAAf,UACE,cAAC,EAAD,IACA,cAAC,gBAAD,CACES,gBAAiB,GACjBC,QAAS,EACTC,gBAAiB,EACjBC,cAAe,EACfC,eAAgB,CACdC,WAAY,kBACZC,SAAU,OACVC,KAAM,WAERC,MAAO,CACL,CACEd,KAAM,UACNe,OAAQ,CACNC,OAAQ,CACNH,KAAM,UAERI,MAAO,CACLJ,KAAM,SAERK,OAAQ,CACNL,KAAM,UAIZ,CACEb,KAAM,SACNmB,UAAW,CACTN,KAAM,SAERA,KAAM,UACNO,OAAQ,WAEV,CACEpB,KAAM,UACNqB,QAAS,kBACPC,MAAM,kCAAoCjB,EAAKkB,IAAI,cACrDC,KAAM,gIAER,CAAExB,KAAM,UAAWqB,QAAS,kBAAMI,QAAQC,IAAI,qBAE9C,CAAE1B,KAAM,UAAWqB,QAAS,kBAAMI,QAAQC,IAAI,qBAC9C,CAAE1B,KAAM,mBAGZ,cAAC,EAAD,OArDA,8BACE,wBAAQqB,QAAS,kBAAMlB,KAAvB,6BCFOwB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,+BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCAdQ,IAASC,OACP,cAAC,IAAD,CACEC,MAAM,2CACNC,UAAU,kDAFZ,SAIE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bd,K","file":"static/js/main.fe77b0ed.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst tippo = (props) => {\r\n  const Text = props.boxText\r\n    ? props.boxText\r\n    : \"default details such as reaction on hover... why not write some text in the hexagon?\";\r\n\r\n  return (\r\n    <div className=\"tippo\">\r\n      <div className=\"tippy4\"></div>\r\n      <div className=\"tippybox\">{Text}</div>\r\n      <div className=\"tippy5\"></div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default tippo;\r\n","import React from \"react\";\r\nimport Tippo from \"./tippo\";\r\n\r\nconst tips = () => {\r\n  return (\r\n    <div className=\"topbar\">\r\n      <div className=\"tippy\">\r\n        this ideally feels like a frame implying hexagon, sticky note, or an\r\n        onhover tiptool.\r\n      </div>\r\n      <div className=\"tippy2\"></div>\r\n      <div className=\"tippy3\"></div>\r\n      <div className=\"tippy4\"></div>\r\n      <div className=\"tippy5\"></div>\r\n      <Tippo boxText=\"using props in react to send in the specific text of your dreams\" />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default tips;\r\n","import React from \"react\";\r\nimport Tips from \"./tips\";\r\n\r\nconst topbar = () => {\r\n  return (\r\n    <div className=\"topbar\">\r\n      <Tips text=\"using props in react to send in the specific text of your dreams\" />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default topbar;\r\n","import React from \"react\";\nimport { useMoralis } from \"react-moralis\";\nimport { Hexagons, TiledHexagons } from \"tiled-hexagons\";\nimport Topbar from \"./components/topbar\";\nimport Tippo from \"./components/tippo\";\n\nimport \"./App.css\";\n\nfunction App() {\n  const { authenticate, isAuthenticated, user } = useMoralis();\n\n  if (!isAuthenticated) {\n    return (\n      <div>\n        <button onClick={() => authenticate()}>Authenticate</button>\n      </div>\n    );\n  }\n  return (\n    <div className=\"App\">\n      <Topbar />\n      <TiledHexagons\n        tileSideLengths={90}\n        tileGap={4}\n        tileBorderRadii={9}\n        maxHorizontal={3}\n        tileTextStyles={{\n          fontFamily: \"Source Sans Pro\",\n          fontSize: \"42px\",\n          fill: \"#7cebff\",\n        }}\n        tiles={[\n          {\n            text: \"DaDeuce\",\n            styles: {\n              normal: {\n                fill: \"yellow\",\n              },\n              hover: {\n                fill: \"green\",\n              },\n              active: {\n                fill: \"blue\",\n              },\n            },\n          },\n          {\n            text: \"+IPFS+\",\n            textStyle: {\n              fill: \"white\",\n            },\n            fill: \"#7cebff\",\n            shadow: \"#64c5d6\",\n          },\n          {\n            text: \"Moralis\",\n            onClick: () =>\n              alert(\"username according to Moralis: \" + user.get(\"username\")),\n            href: \"https://muellerberndt.medium.com/catching-weird-security-bugs-in-solidity-smart-contracts-with-invariant-checks-435582dfb5bd\",\n          },\n          { text: \"inspect\", onClick: () => console.log(\"clckd 'inspect'\") },\n\n          { text: \"console\", onClick: () => console.log(\"clckd 'console'\") },\n          { text: \"ðŸ˜¼\" },\n        ]}\n      />\n      <Tippo />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { MoralisProvider } from \"react-moralis\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <MoralisProvider\n    appId=\"SdUaoBywNfrRL1oiVXGfmZY2lhBQX0J2D2lr2YFp\"\n    serverUrl=\"https://w6babvgfvs2k.usemoralis.com:2053/server\"\n  >\n    <App />\n  </MoralisProvider>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}